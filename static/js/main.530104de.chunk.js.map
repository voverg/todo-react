{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","changeItem","event","text","target","value","setState","props","onSearch","type","placeholder","this","onChange","React","Component","ItemStatusFilter","buttonsList","name","label","filter","onFilter","buttonsElems","map","clazz","onClick","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","classNames","TodoList","todos","elements","item","id","itemProps","ItemAddForm","labelChange","submitLabel","preventDefault","trim","onItemAdd","onSubmit","autoFocus","App","maxId","todoData","searchFilter","addItem","newItem","createTodoItem","deleteItem","index","findIndex","el","before","slice","after","toggleImportant","toggleProperty","toggleDone","search","arr","toLowerCase","includes","searchChange","filterChange","filterVal","data","getDataFromLocalStorage","localStorage","getItem","taskList","JSON","parse","length","setItem","stringify","propName","oldItem","filterValue","prevState","setDataToLocalStorage","doneCount","todoCount","visibleItems","filterSwitch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.530104de.chunk.js","sourcesContent":["import AppHeader from './app-header.js';\n\nexport default AppHeader;\n","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <header className=\"app-header\">\r\n            <h1>Todo list</h1>\r\n            <h2>{toDo} to do, {done} done</h2>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React from 'react';\n\nimport './search-panel.css';\n\n\nexport default class SearchPanel extends React.Component {\n  state = {\n    term: ''\n  };\n\n  changeItem = (event) => {\n    const text = event.target.value;\n    this.setState(({term}) => {\n      return {\n        term: text\n      };\n    });\n    this.props.onSearch(text);\n  };\n\n  render() {\n    return (\n        <input type=\"text\"\n               className=\"search-panel\"\n               placeholder=\"Type to search...\"\n               value={this.state.term}\n               onChange={this.changeItem}\n        />\n    );\n  }\n}\n","import ItemStatusFilter from './item-status-filter.js';\n\nexport default ItemStatusFilter;\n","import React from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends React.Component {\n  buttonsList = [\n    {name: 'all', label: 'All'},\n    {name: 'active', label: 'Active'},\n    {name: 'done', label: 'Done'}\n  ];\n\n  render() {\n    const {filter, onFilter} = this.props;\n\n    const buttonsElems = this.buttonsList.map(({name, label}) => {\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n\n      return (\n        <button type=\"button\"\n                className={`btn ${clazz}`}\n                key={name}\n                onClick={() => onFilter(name)}\n        >\n          {label}\n        </button>\n      );\n    });\n\n    return (\n      <div className=\"btn-group item-status-filter\">\n        {buttonsElems}\n      </div>\n    );\n  }\n}\n","import TodoListItem from './todo-list-item.js';\n\nexport default TodoListItem;\n","import React from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends React.Component {\n  render() {\n    const {label, onDeleted, onToggleImportant, onToggleDone, important, done} = this.props;\n    let classNames = 'todo-list-item';\n\n    if (done) {\n      classNames += ' done';\n    }\n\n    if (important) {\n      classNames += ' important';\n    }\n\n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-list-item-label\"\n          onClick={onToggleDone}>\n          {label}\n        </span>\n\n        <button type=\"button\"\n          className=\"btn btn-outline-danger btn-sm\"\n          onClick={onDeleted}>\n            <i className=\"fa fa-trash\" />\n        </button>\n\n        <button type=\"button\"\n          className=\"btn btn-outline-success btn-sm\"\n          onClick={onToggleImportant}>\n            <i className=\"fa fa-exclamation\" />\n        </button>\n      </span>\n      );\n  }\n}\n","import TodoList from './todo-list.js';\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\n\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\n  const elements = todos.map((item) => {\n    const {id, ...itemProps} = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n          {...itemProps}\n          onDeleted={() => onDeleted(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)}\n        />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n    {elements}\n    </ul>\n    );\n};\n\n\nexport default TodoList;\n","import ItemAddForm from './item-add-form.js';\n\nexport default ItemAddForm;\n","import React from 'react';\n\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends React.Component {\n  state = {\n    label: ''\n  };\n\n  labelChange = (event) => {\n    this.setState(({label}) => {\n      return {\n        label: event.target.value\n      };\n    });\n  };\n\n  submitLabel = (event) => {\n    event.preventDefault();\n    if (this.state.label.trim() === '') return;\n\n    this.props.onItemAdd(this.state.label.trim());\n    this.setState(({label}) => {\n      return {\n        label: ''\n      };\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"item-add-form\" onSubmit={this.submitLabel}>\n        <input type=\"text\"\n                className=\"form-control new-task\"\n                onChange={this.labelChange}\n                placeholder=\"New task...\"\n                value={this.state.label}\n                autoFocus\n         />\n        <button type=\"submit\"\n                className=\"btn btn-outline-secondary add-btn\"\n        >\n            Add\n        </button>\n      </form>\n    );\n  }\n}\n","import App from './app.js';\n\nexport default App;\n","import React from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport ItemStatusFilter from '../item-status-filter';\nimport TodoList from '../todo-list';\nimport ItemAddForm from '../item-add-form';\nimport './app.css';\n\nexport default class App extends React.Component {\n  // Create max id for items\n  maxId = 100;\n\n  // Initial state\n  state = {\n    todoData: [],\n    searchFilter: '',\n    filter: 'all'\n  };\n\n  componentDidMount() {\n    const data = this.getDataFromLocalStorage();\n    this.setState({todoData: data});\n  }\n\n  // Get data from Local Storage\n  getDataFromLocalStorage() {\n    const data = localStorage.getItem('taskList');\n    if (data) {\n      const taskList = JSON.parse(data);\n      this.maxId = taskList.length;\n\n      return taskList;\n    } else {\n      return [];\n    }\n  }\n\n  // Set data to localStorage\n  setDataToLocalStorage() {\n    localStorage.setItem('taskList', JSON.stringify(this.state.todoData));\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({todoData}) => {\n      const newArray = [...todoData, newItem];\n\n      return {\n        todoData: newArray\n      }\n    });\n  };\n\n  deleteItem = (id) => {\n    this.setState(({todoData}) => {\n      const index = todoData.findIndex((el) => el.id === id);\n\n      const before = todoData.slice(0, index);\n      const after = todoData.slice(index + 1);\n      const newArray = [...before, ...after];\n\n      return {\n        todoData: newArray\n      };\n    });\n  };\n\n  toggleProperty(arr, id, propName) {\n    const index = arr.findIndex((el) => el.id === id);\n\n    const oldItem = arr[index];\n    const newItem = {...oldItem, [propName]: !oldItem[propName]};\n\n    const before = arr.slice(0, index);\n    const after = arr.slice(index + 1);\n\n    return [...before, newItem, ...after];\n  }\n\n  toggleImportant = (id) => {\n    this.setState(({todoData}) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'important')\n      };\n    });\n  };\n\n  toggleDone = (id) => {\n    this.setState(({todoData}) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'done')\n      };\n    });\n  };\n\n// Search functions\n   search = (arr, text) => {\n    if (text.trim() === '') {\n      return arr;\n    }\n\n    const filterResult = arr.filter((item) => {\n      return item.label\n        .toLowerCase()\n        .includes(text.toLowerCase());\n    });\n\n    return filterResult;\n  }\n\n  searchChange = (text) => {\n    this.setState({searchFilter: text});\n  };\n\n  // Filter functions\n  filterSwitch(arr, filterValue) {\n    switch(filterValue) {\n      case 'all':\n        return arr;\n      case 'active':\n        return arr.filter((item) => !item.done);\n      case 'done':\n        return arr.filter((item) => item.done);\n      default:\n        return arr;\n    }\n  }\n\n  filterChange = (filterVal) => {\n    this.setState(({filter}) => {\n      return {\n        filter: filterVal\n      };\n    });\n  };\n\n  componentDidUpdate(prevState) {\n    if (this.state.todoData !== prevState.todoData) {\n      this.setDataToLocalStorage();\n    }\n  }\n\n  render() {\n    const {todoData, searchFilter, filter} = this.state;\n\n    const doneCount = todoData.filter((el) => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    const visibleItems = this.filterSwitch(this.search(todoData, searchFilter), filter);\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={todoCount} done={doneCount} />\n        <div className=\"top-panel\">\n          <SearchPanel onSearch={this.searchChange} />\n          <ItemStatusFilter\n            filter={filter}\n            onFilter={this.filterChange}\n          />\n        </div>\n\n        <TodoList\n          todos={visibleItems}\n          onDeleted={this.deleteItem}\n          onToggleImportant={this.toggleImportant}\n          onToggleDone={this.toggleDone} />\n\n        <ItemAddForm onItemAdd={this.addItem} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}